# Unique name for this workflow
name: SFDX-CLI to Deploy to Production Org

# Definition of when the workflow should run
on:
    workflow_dispatch:

# Jobs to be executed
jobs:
  SFDX-CLI-Deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🐧 GitHub Action running on ${{ runner.os }}"
      
      - run: echo "🔎 Retrieving ${{ github.ref }} from ${{ github.repository }}."

    # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v2

    # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: cd sample-sfdx-repo-workflow && npm install @salesforce/cli -global

    # Test print the secret key for validation
      - run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key

    # Authenticate login using oAuth
      - name: 'Secure authenticate to the SFDC Org for deployment'
        run: sf org login jwt --client-id ${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --set-default-dev-hub
      
      # - run: cd sample-sfdx-repo-workflow && sfdx force:source:deploy -p force-app/main/default --testlevel=RunLocalTests -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}

    # Deploy the source code to the production org and run tests
      # - name: 'Push the source code to the production org and run tests'
      # - run: cd sample-sfdx-repo-workflow && sf project deploy start --source-dir force-app/main/default --test-level RunLocalTests --target-org ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}

    # Deploy the source code to the production org without running the tests
      - name: 'Push the source code to the production org'
        run: cd sample-sfdx-repo-workflow && sf project deploy start --source-dir force-app/main/default --target-org ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}
